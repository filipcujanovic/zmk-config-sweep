/*
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYMBOLS 1
#define NAVIGATION 2
#define NUMBERS 3

#define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
combo_##NAME { \
    timeout-ms = <TIMEOUT>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    require-prior-idle-ms = <140>; \
};

/ {

    behaviors {
        isk: intuitive_sk {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sk>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <SYMBOLS NAVIGATION>;
            then-layer = <NUMBERS>;
        };
    };

    combos {
        compatible = "zmk,combos";
        COMBO(sqt, &kp SQT, 1 2, 50)
        COMBO(esc, &kp ESC, 2 3, 50)
        COMBO(caps_word, &caps_word, 20 29, 50)
        COMBO(bspc, &kp BSPC, 6 7, 50)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R       &kp T              &kp Y   &kp U &kp I     &kp O   &kp P
                &kp A &kp S &kp D &kp F       &kp G              &kp H   &kp J &kp K     &kp L   &kp SEMI
                &kp Z &kp X &kp C &kp V       &kp B              &kp N   &kp M &kp COMMA &kp DOT &kp SLASH
                                  &mo SYMBOLS &kp ENTER          &kp SPC &mo NAVIGATION
            >;
        };

        symbol_layer {
            bindings = <
                &kp GRAVE &kp LT    &kp GT   &kp UNDER   &kp QMARK         &kp DQT   &kp TILDE &kp PIPE       &none    &none
                &kp EXCL  &kp AT    &kp HASH &kp DLLR &kp PRCNT            &kp CARET &kp AMPS &kp ASTERISK &kp LPAR  &kp RPAR
                &kp EQUAL &kp MINUS &kp PLUS &kp LBRC &kp RBRC             &kp LBKT  &kp RBKT &kp SQT      &kp COLON &kp BSLH
                                             &trans   &trans               &trans    &trans
            >;
        };

        navigation_layer {
            bindings = <
                &none     &none    &none     &none      &none               &kp C_PREVIOUS &kp C_VOLUME_DOWN    &kp C_VOLUME_UP      &kp C_NEXT &kp C_PLAY_PAUSE
                &sk LCTRL &sk LALT &sk LGUI  &sk LSHIFT &kp TAB             &kp LEFT       &kp DOWN             &kp UP               &kp RIGHT  &kp LA(BSPC)
                &kp LG(Z) &none    &kp LG(C) &kp LG(V)  &none               &none          &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &none      &none
                                             &trans     &trans              &trans         &trans
            >;
        };

        numbers_layer {
            bindings = <
                &kp N1       &kp N2       &kp N3       &kp N4         &kp N5              &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3   &bt BT_SEL 4        &none   &none   &none   &none   &none
                &bootloader  &none        &none        &kp LG(LS(N4)) &kp LG(LS(N5))      &none   &none   &none   &none   &none
                                                       &trans         &trans              &trans  &trans

            >;
        };

    };
};
